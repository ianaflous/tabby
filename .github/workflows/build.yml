name: Package-Build
on: [push, pull_request]
jobs:
  Lint:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Installing Node
      uses: actions/setup-node@v3.7.0
      with:
        node-version: 22

    - name: Install deps
      run: |
        sudo apt-get update && sudo apt-get install -y libfontconfig1-dev
        npm i -g yarn
        cd app
        yarn
        cd ..
        rm app/node_modules/.yarn-integrity
        yarn

    - name: Build typings
      run: yarn run build:typings

    - name: Lint
      run: yarn run lint

  Windows-Build:
    runs-on: windows-latest
    needs: Lint
    strategy:
      matrix:
        include:
          - arch: x64
            rust_triple: x86_64-pc-windows-msvc
          - arch: arm64
            rust_triple: aarch64-pc-windows-msvc
      fail-fast: false

    env:
      RUST_TARGET_TRIPLE: ${{matrix.rust_triple}}
      ARCH: ${{matrix.arch}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Code signing with Software Trust Manager
      uses: digicert/ssm-code-signing@v1.0.0
      if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags'))

    - name: Installing Node
      uses: actions/setup-node@v3.7.0
      with:
        node-version: 22

    - run: npm i -g npx
    - run: rustup target add ${{matrix.rust_triple}}

    - name: Update node-gyp
      run: |
        npm install --global node-gyp@10.2.0
        npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}

    - name: Build
      shell: powershell
      run: |
        npm i -g yar node-gyp
        yarn --network-timeout 1000000
        yarn run build
        node scripts/prepackage-plugins.mjs
      env:
        ARCH: ${{matrix.arch}}

    - name: Build packages without signing
      run: node scripts/build-windows.mjs
      env:
        ARCH: ${{matrix.arch}}

    - name: Package artifacts
      run: |
        mkdir artifact-setup
        mv dist/*-setup-*.exe artifact-setup/
        mkdir artifact-portable
        mv dist/*-portable-*.zip artifact-portable/

    - uses: actions/upload-artifact@master
      name: Upload installer
      with:
        name: Windows installer (${{matrix.arch}})
        path: artifact-setup

    - uses: actions/upload-artifact@master
      name: Upload portable build
      with:
        name: Windows portable build (${{matrix.arch}})
        path: artifact-portable
